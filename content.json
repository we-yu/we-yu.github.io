{"meta":{"title":"Kohaku-san Kawaii","subtitle":"we-yu's note","description":"This is my technical notes. And sometimes Diary.","author":"yuji","url":"https://we-yu.github.io","root":"/"},"pages":[{"title":"tags","date":"2019-03-27T17:53:56.000Z","updated":"2019-03-27T17:53:56.526Z","comments":true,"path":"tags/index.html","permalink":"https://we-yu.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Review of LineStickerLider","slug":"Review-of-LineStickerLider","date":"2019-05-23T16:11:58.000Z","updated":"2019-05-23T17:32:05.622Z","comments":true,"path":"2019/05/23/Review-of-LineStickerLider/","link":"","permalink":"https://we-yu.github.io/2019/05/23/Review-of-LineStickerLider/","excerpt":"","text":"Reminders from LineStickerLiderAdd scrollbar by tkinter To use scrollbar by tkinter GUI. Scrollbar only attachable for Canvas. So, If needs put graphic canvases on frame, Should be make as this. 123456Top of interface[Icon Canvas-1][Icon Canvas-2][Icon Canvas-3][...][Graphical frame][Scrollbar Canvas][Basement Frame]Bottom of interface Sample Code1234567891011121314def SetGallaryFrame(self): # Make vertical scrollbar to see all stickers ----------------------- self.outerCV = tk.Canvas(self.iconsFrame, width=GUIController.__windowWidth, height=GUIController.__windowHeight) scrollbar = tk.Scrollbar(self.iconsFrame, orient=tk.VERTICAL) scrollbar.pack(side=tk.RIGHT, fill=tk.Y) scrollbar.config(command=self.outerCV.yview) self.outerCV.config(scrollregion=(0, 0, 2000, 2000), yscrollcommand=scrollbar.set) self.outerCV.pack(fill=tk.BOTH) galleryFrame = tk.Frame(self.outerCV) self.galleryTag = self.outerCV.create_window((0, 0), window=galleryFrame, anchor=tk.NW, width=self.outerCV.cget(&apos;width&apos;)) # -------------------------------------------------------------------- return galleryFrame Radio button grouping Connected by StringVar() or IntVar() Set that variable to Radiobutton. 1234567891011121314# Radio button group control# Radio group value should be class value.# self.groupVar = tk.IntVar()# self.groupVar.set(2)self.groupVar = tk.StringVar()self.groupVar.set(&apos;S&apos;)# groupVar = tk.StringVar(value=&apos;sizeL&apos;)radioTexts = [&apos;L&apos;, &apos;M&apos;, &apos;S&apos;]radioButtons = []# self.groupVarを軸としてL/M/Sのラジオボタンを設定。初期値はSを指定。for i ,rText in enumerate(radioTexts) : radioButtons.append(tk.Radiobutton(inputFrame, text=rText, value=rText, variable=self.groupVar)) To delete Canvas &amp; Frame To delete Frame, That is depend on how to layout. pack() -&gt; pack_forget() 123self.outerCV.delete(&apos;all&apos;)# ----self.iconsFrame.pack_forget()","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"https://we-yu.github.io/tags/Python/"},{"name":"Web-Scraping","slug":"Web-Scraping","permalink":"https://we-yu.github.io/tags/Web-Scraping/"},{"name":"tkinter","slug":"tkinter","permalink":"https://we-yu.github.io/tags/tkinter/"},{"name":"Slack","slug":"Slack","permalink":"https://we-yu.github.io/tags/Slack/"},{"name":"WIP","slug":"WIP","permalink":"https://we-yu.github.io/tags/WIP/"}]},{"title":"My Amber and Silver","slug":"My-Amber-and-Silver","date":"2019-03-30T14:10:25.000Z","updated":"2019-03-30T14:27:01.648Z","comments":true,"path":"2019/03/30/My-Amber-and-Silver/","link":"","permalink":"https://we-yu.github.io/2019/03/30/My-Amber-and-Silver/","excerpt":"","text":"This is my silver, Name is Gin. It seems now he likes on refrigerator.","categories":[],"tags":[{"name":"Cat","slug":"Cat","permalink":"https://we-yu.github.io/tags/Cat/"},{"name":"Diary","slug":"Diary","permalink":"https://we-yu.github.io/tags/Diary/"}]},{"title":"Line-Sticker-Lider (cooperate with Slack)","slug":"Line-Sticker-Lider-cooperate-with-Slack","date":"2019-03-28T15:04:24.000Z","updated":"2019-05-23T16:54:35.259Z","comments":true,"path":"2019/03/28/Line-Sticker-Lider-cooperate-with-Slack/","link":"","permalink":"https://we-yu.github.io/2019/03/28/Line-Sticker-Lider-cooperate-with-Slack/","excerpt":"","text":"Line Sticker samples use in SlackBackground On Slack, If post “Picture’s URL”. Shows that picture directly in chat window. (Depend on setting) All of Line stickers is published on Line Store website. But right click on sticker graphic, Can’t get URL. Might be restricted. No worry, We have F12 on keyboard Finally, Get target sticker’s URL from Elements window and post that on Slack. We can see desired one for your team. Purpose We can get desired sticker sample picture by above process. But if do it every time. It’s bother. By the way, 3 great virtues of a programmer. Laziness, Impatience, Hubris. It is time —– for simplification. How to do Made by Primitive Python as possible. Require components maybe GUI, Web-Scraper, DB. I think Recent, Favorite functions are useful. Web-Scraping I already learned, Maybe I can do. Python most primitive GUI component is maybe tkinter? OK I will do. This is just small &amp; local application. No need huge DB system. Can I use SQLite? Currently progress I have confirmed that SQLite can be used in Python Now try to make sample script. Considering draft design of GUI… -&gt; To design GUI, Now learning sketch Now prepare modules of main and gui control. Finally I have to put pictures as tile in window. Already done “Put pictures as tile”. Next I have to create table… 2019/04/17 Now succeeded to download Line sticker samples and puts as tile on Generated GUI window. 2019/04/22 Now put URL input text-area and get new icons from specified URL, Then reload Icons window. 2019/05/02 Succeeded connect with DB (sqlite file). Now stored Large, Middle, Small size icons in table. Next topic Canvas make as button, If kick canvas copy url on clipboard. 2019/05/05 Now mainpath working fine. Next add more optional functions. 2019/05/14 Scrollbar is working… To work it, Need set Frame -&gt; Canvas -&gt; Frame -&gt; Canvases. That was trap. 2019/05/23 Refactoring done. Still remain functions that I want to add. (Thumbnails, Favs, Recents) But now working as decent. Once stop here and review what I done by this development.","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"https://we-yu.github.io/tags/Python/"},{"name":"Web-Scraping","slug":"Web-Scraping","permalink":"https://we-yu.github.io/tags/Web-Scraping/"},{"name":"tkinter","slug":"tkinter","permalink":"https://we-yu.github.io/tags/tkinter/"},{"name":"Slack","slug":"Slack","permalink":"https://we-yu.github.io/tags/Slack/"}]},{"title":"Pythonによるスクレイピングでニコニコ大百科掲示板を保存してみる","slug":"Pythonによるスクレイピングでニコニコ大百科掲示板を保存してみる","date":"2019-03-25T16:55:16.000Z","updated":"2019-03-27T17:58:24.972Z","comments":true,"path":"2019/03/25/Pythonによるスクレイピングでニコニコ大百科掲示板を保存してみる/","link":"","permalink":"https://we-yu.github.io/2019/03/25/Pythonによるスクレイピングでニコニコ大百科掲示板を保存してみる/","excerpt":"","text":"Save logs from NICO NICO PEDIA by Web-scraping.Now NICO-NICO-PEDIA(Nicopedy) res page only show 30 res in 1 page, Difficult to save all logs in 1 time. Solve this issue by Web-scraping.Background Nicopedy res page only shows 30 res in 1 page, Nothing any functions to save all logs. Many times delete res by admin, Difficult to trace log text. Purpose Scraping target Article, Get all res from 1 to latest, save as text file. Detail Input top URL of article, All res log save as text file. -&gt; Article-title.log If new article, Get all logs. But that is suspended article, restart from latest res. By only Python that is difficult File connection and 1 line extract. Some process left to Bash. My source is here.https://github.com/we-yu/sb.webscraping Semi-automation If you want to save log everytime, Prepare text file as this and kick command each time as usage, All logs update automatically. File name : AutoLoadArticleList.txt12345678910# usage# $ cat AutoLoadArticleList.txt | grep -vF &apos;#&apos; | xargs -I&#123;&#125; python3 nicopedy_saver.py &#123;&#125;# Pythonhttps://dic.nicovideo.jp/a/python# Linuxhttps://dic.nicovideo.jp/a/linux# PHPhttps://dic.nicovideo.jp/a/php# メルトリリスhttps://dic.nicovideo.jp/a/%E3%83%A1%E3%83%AB%E3%83%88%E3%83%AA%E3%83%AA%E3%82%B9","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"https://we-yu.github.io/tags/Python/"},{"name":"Bash","slug":"Bash","permalink":"https://we-yu.github.io/tags/Bash/"},{"name":"Python3","slug":"Python3","permalink":"https://we-yu.github.io/tags/Python3/"},{"name":"Niconico","slug":"Niconico","permalink":"https://we-yu.github.io/tags/Niconico/"}]},{"title":"CSR/CRSによる疎行列の圧縮（C言語）","slug":"CSR-CRSによる疎行列の圧縮（C言語）","date":"2019-03-25T15:50:00.000Z","updated":"2019-03-27T17:58:51.371Z","comments":true,"path":"2019/03/25/CSR-CRSによる疎行列の圧縮（C言語）/","link":"","permalink":"https://we-yu.github.io/2019/03/25/CSR-CRSによる疎行列の圧縮（C言語）/","excerpt":"","text":"Compress Sparse matrix by CSR|CRS algorithm.Coding by C-Lang. Use CSR algorithm.Compress sparse matrix On Previous article, I created Fetishism CSV. This is exported as Table. i.e. This is Matrix. And 1 product contains 6 tags (max), If increase target products, Also matrix getting huge by 0 elements. (This is sparse matrix) And Wanting all between heaven and hell is the human condition. So, Sparse Matrix should be compressed. On this time, Compress by CSR method used 3 matrixes. Before real data, Try by sample matrix. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162#include &lt;stdio.h&gt;#include &lt;string.h&gt;// Sparse Matrix size define#define _SPROW_SIZE 4#define _SPCOL_SIZE 5// CSR用３配列struct _csrData&#123; int row[_SPROW_SIZE + 1]; // 縦軸 int col[_SPROW_SIZE * _SPROW_SIZE]; // 横軸 int val[_SPROW_SIZE * _SPROW_SIZE]; // 実際の要素&#125; typedef csrData;void Dbg_ShowSomeVal(int*, int);void Dbg_ShowMatrix(int*, int, int);void Dbg_ShowCSRStruct(csrData*, int);int CountNonZeroValues(int*, int);int CreateCompactMatrix(int*, csrData*);// メイン処理void main()&#123; // CSR管理用構造体定義・アドレス獲得 csrData csr; csrData *csr_p; csr_p = &amp;csr; // ベースとなる疎行列 int sparseMatrix[_SPROW_SIZE][_SPCOL_SIZE] = &#123; &#123;0 , 0 , 3 , 0 , 4&#125;, &#123;0 , 0 , 5 , 7 , 0&#125;, &#123;1 , 0 , 0 , 0 , 0&#125;, &#123;0 , 2 , 6 , 0 , 0&#125; &#125;; // 疎行列再現用エリア確保 ゼロクリアしておく int sparseMatrix_recon[_SPROW_SIZE][_SPCOL_SIZE]; memset(sparseMatrix_recon, 0, sizeof(sparseMatrix_recon)); // CSR管理構造体初期化 memset(csr_p, 0, sizeof(csr)); // 疎行列に対応するCSR情報取得 int non0size = CreateCompactMatrix((int*)sparseMatrix, (csrData*)csr_p); // まずは元となる疎行列を二重ループで素直に表現 printf(\"元々\\n\"); Dbg_ShowMatrix((int*)sparseMatrix, _SPROW_SIZE, _SPCOL_SIZE); // 上で描いた疎行列に関するCSR情報表示 Dbg_ShowCSRStruct((csrData*)csr_p, non0size); /* CSR ROW : 0 2 4 5 7 2 4 COL : 2 4 2 3 0 1 2 VAL : 3 4 5 7 1 2 6 */ // 最初はROWの 0 to (2-1)から得た値を使用し、COLの[0]to[1]へアクセス。 // 再現対象の一行目の「２番目・４番目」には「３・４」の値が入っていることがわかる。 // ROWの次は 2 to (4-1)の値を得て、COLの[2]to[3]へアクセス… と繰り返すことで配列３つから二次元行列を再現が可能になる。 // CSR要素から「どこに何が入るのか」を(x, y) = value形式で表示 printf(\"復活(要素)\\n\"); int v = 0; int r = 0; int loopCnt = 0; for( int i = 0; i &lt; _SPROW_SIZE ; i++ ) &#123; for( int j = csr_p-&gt;row[i]; j &lt;= csr_p-&gt;row[i+1]-1 ; j++ ) &#123; int c = csr_p-&gt;col[j]; int v = csr_p-&gt;val[j]; printf(\"(%2d, %2d) =&gt; %2d\\n\", r, c, v); // ついでに再現用行列の当該カラムに値をぶち込んでおく sparseMatrix_recon[r][c] = v; loopCnt++; &#125; r++; &#125; // 再現用行列を二重ループで描く。CSR情報のみで行列の再現が可能なことが判断できる。 printf(\"復元(二次元)\\n\"); Dbg_ShowMatrix((int*)sparseMatrix, _SPROW_SIZE, _SPCOL_SIZE); printf(\"\\n\"); printf(\"Size spMat = %lu -&gt; CSR =%lu, loopCount = %d\\n\", sizeof(sparseMatrix), sizeof(csr), loopCnt);&#125;// 配列の中身を先頭から指定数表示する（Debug用）void Dbg_ShowSomeVal(int *adr, int range)&#123; for( int i = 0; i &lt; range ; i++ ) printf(\"%2d \", *(adr + i)); printf(\"\\n\");&#125;// 二次元配列の内容表示void Dbg_ShowMatrix(int *topMtx, int rowLength, int colLength)&#123; int c = 0; for( int i = 0; i &lt; rowLength ; i++ ) &#123; for( int j = 0; j &lt; colLength ; j++ ) &#123; printf(\"%2d \", *(topMtx + c)); c++; &#125; printf(\"\\n\"); &#125;&#125;// CSR処理用各配列内容表示void Dbg_ShowCSRStruct(csrData *csr_p, int non0size)&#123; printf(\"CSR\\n\"); printf(\"ROW : \"); Dbg_ShowSomeVal(csr_p-&gt;row, non0size); printf(\"COL : \"); Dbg_ShowSomeVal(csr_p-&gt;col, non0size); printf(\"VAL : \"); Dbg_ShowSomeVal(csr_p-&gt;val, non0size);&#125;// 疎行列内の非0要素数を数え返却する。int CountNonZeroValues(int *array, int length)&#123; int cntNonZ = 0; for( int i = 0; i &lt; length ; i++ ) if(*(array + i) != 0) cntNonZ++; return cntNonZ;&#125;// 疎行列からCSR用小配列を作成する。// sparseMatrix = 入力:疎行列// compactMatrix = 出力:CSR配列int CreateCompactMatrix(int *sparseMatrix, csrData *csr)&#123; int *spMtx; spMtx = sparseMatrix; int size = CountNonZeroValues(spMtx, (_SPROW_SIZE * _SPCOL_SIZE)); int k = 0; int c = 0; int tgtVal; for( int i = 0; i &lt; _SPROW_SIZE ; i++ ) &#123; for( int j = 0; j &lt; _SPCOL_SIZE ; j++ ) &#123; tgtVal = *(spMtx + c); if(tgtVal != 0) &#123; csr-&gt;col[k] = j; csr-&gt;val[k] = tgtVal; k++; &#125; c++; &#125; csr-&gt;row[i + 1] = k; &#125; return size;&#125; Sample matrix, Use this. 1234| 0 0 3 0 4 || 0 0 5 7 0 || 1 0 0 0 0 || 0 2 6 0 0 | This matrix converted CSR 3 matrix, Get this 3. 1234CSRROW : 0 2 4 5 7 2 4COL : 2 4 2 3 0 1 2VAL : 3 4 5 7 1 2 6 Attention to ROW[0] to ROW[1]-1, ROW[1] to ROW[2]-1, ROW[2] to ROW[3]-1, ROW[3] to ROW[4]-1 each values. Each ROW values are 0 to 1, 2 to 3, 4 to 4, 5 to 6. By this result, COL[0:1], COL[2:3], COL[4:4], COL[5:6] Each values means Value exist col index of 0, 1, 2, 3 each records. On this case, Each COL values are 2, 4, 2, 3, 0, 1, 2. By this result, Column [2, 4] of 0 record, Column [2, 3] of 1 recored… We can see there’s values on this index. Specify value contains in VAL[n] array. By Left -&gt; Right / Upper -&gt; Lower order. Get values from this index, Finally we can reproduce input sample matrix. Normally use this CSR matrix for calculate, But if reproduce again, That should be match with input matrix. 123456789101112131415161718192021222324元々 0 0 3 0 4 0 0 5 7 0 1 0 0 0 0 0 2 6 0 0CSRROW : 0 2 4 5 7 2 4COL : 2 4 2 3 0 1 2VAL : 3 4 5 7 1 2 6復活(要素)( 0, 2) =&gt; 3( 0, 4) =&gt; 4( 1, 2) =&gt; 5( 1, 3) =&gt; 7( 2, 0) =&gt; 1( 3, 1) =&gt; 2( 3, 2) =&gt; 6復元(二次元) 0 0 3 0 4 0 0 5 7 0 1 0 0 0 0 0 2 6 0 0Size spMat = 80 -&gt; CSR =148, loopCount = 7 Next subject Already done getting data by scraping. Already done make matrix by Python. Already done Compress sparse matrix by C. Next. Call C processing from Python script Maybe it is Cython… What is rejoice, That is different for all programmers. But for me, that is Combine other category processing and make result which desired one. But always Environment setting is troublesome… I wish it going well Python+C setup.","categories":[],"tags":[{"name":"C","slug":"C","permalink":"https://we-yu.github.io/tags/C/"},{"name":"CSR","slug":"CSR","permalink":"https://we-yu.github.io/tags/CSR/"},{"name":"CRS","slug":"CRS","permalink":"https://we-yu.github.io/tags/CRS/"},{"name":"SparseMatrix","slug":"SparseMatrix","permalink":"https://we-yu.github.io/tags/SparseMatrix/"}]},{"title":"pythonによる紳士達の性癖分析：データフレーム編","slug":"pythonによる紳士達の性癖分析：データフレーム編","date":"2019-03-25T15:09:32.000Z","updated":"2019-03-27T17:57:25.292Z","comments":true,"path":"2019/03/25/pythonによる紳士達の性癖分析：データフレーム編/","link":"","permalink":"https://we-yu.github.io/2019/03/25/pythonによる紳士達の性癖分析：データフレーム編/","excerpt":"","text":"Analyzing Gentlemen’s fetishism by Web-scraping from Doujin-game site : 3rdTry to create Matrix by DataFrame. On previous article, I crated by 2-dimension-array.Migrate from Array to DataFrame. Matrix that created last article, That constructed by 2-D-Array. This is not bad… But Now I use Python. Try to migrate to DataFrame. After created 2-D-Matrix, Keep data and create DataFrame. Add code to previous source.1234567891011121314151617181920212223242526272829303132# :# (前略)# :# 頻出の組み合わせを出力for rq in ranq : print(rq[\"val\"], rq[\"x\"], rq[\"y\"])# 配列→DataFrame化list_df = pd.DataFrame( columns=tags )# enumerateでiを進めながらxを使用できる。for i, x in enumerate(tags): # TagMatrixから一行作り、DataFrameに追加することを繰り返す。 tmp_se = pd.Series( tagMatrix[x], index=list_df.columns, name=tags[i] ) list_df = list_df.append( tmp_se )print( list_df.head() )# 行（横軸）の抽出print(list_df.iloc[3:6, :])# 列（縦軸）の抽出print(list_df.iloc[:, 3:6].head())# タグを指定しての列の抽出tgtLine = ['陵辱', '逆転無し']print(list_df[tgtLine].head())# 縦軸で平均算出print(list_df.mean(axis = 0))# 横軸で合計値算出print(list_df.sum(axis = 1))# 平均list_df.to_csv(\"FromDM.csv\") Might be basic process is Get 1 line from 2-D-Array -&gt; 1 line append for DataFrame. This time matrix isn’t Mathematical Matrix. No need that function. But it able to calculate Average, Sum, others. I should note it. This is useful to export into CSV as easily. Can I make it as Upper triangular matrix by 1 command? To check result, Take diff between CSV exported from 2-D-array and CSV exported by DataFrame. There’s diff on header (Null ‘-‘). But remain data confirmed to matched.","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"https://we-yu.github.io/tags/Python/"},{"name":"DataFrame","slug":"DataFrame","permalink":"https://we-yu.github.io/tags/DataFrame/"}]},{"title":"pythonによる紳士達の性癖分析：Webスクレイピング編","slug":"pythonによる紳士達の性癖分析：Webスクレイピング編","date":"2019-03-24T16:12:39.000Z","updated":"2019-03-27T17:57:32.052Z","comments":true,"path":"2019/03/24/pythonによる紳士達の性癖分析：Webスクレイピング編/","link":"","permalink":"https://we-yu.github.io/2019/03/24/pythonによる紳士達の性癖分析：Webスクレイピング編/","excerpt":"","text":"Analyzing Gentlemen’s fetishism by Web-scraping from Doujin-game site : 1stGet data from Doujin-game download web-site. Analyze popular genre.Collect fetishism data by Web-scraping. To review currently Python learning, Do real web-scraping. Perhaps someday useful for MachineLearning… I will get ranking data from A Doujin-game website. Get data from high-ranking games, We may understand recently popular fetish genre by gentlemen. I have to show some Unclean keywords. Please forgive me, Or you’d better leave from here. Ready? 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128# coding: UTF-8import requestsfrom bs4 import BeautifulSoupimport re # 正規表現用from time import sleep # 待ち時間用from pprint import pprint # 改行付き配列出力import csvSCRAPING_INTERVAL_TIME = 5.5ranking_category_total = ( \"http://*\",)# https://www.dlsite.com/maniax/ranking# ページネイションを含め、探査対象となるURL群を取得し配列に格納、返却する。def getSearchTargetURLs(baseURLs) : for basePage in baseURLs : tgtpage = requests.get(basePage) pageUrls = [] soup = BeautifulSoup(tgtpage.content, \"html.parser\") # ページネイションURLを取得 pagenations = soup.select(\"li.ranking_pagination_item\") # ページネイションが存在しない場合は単一ページだけなので入力URLのみリストに入れ続行 if len(pagenations) == 0 : pageUrls.append(basePage) continue for pagina in pagenations : nexturl = pagina.find('a', href=True) pageUrls.append(nexturl['href']) # 重複要素を削除（順番を保持しない） pageUrls = list(set(pageUrls)) pprint(pageUrls) return pageUrls# 対象のプロダクトページが持つタグをすべて取得。タイトルと合わせて返す。def getAttributeTags(tgturl) : tgtpage = requests.get(tgturl) sp = BeautifulSoup(tgtpage.content, \"html.parser\")# pageTitle = sp(\"h1\") pageTitle = sp.select(\"h1\")[0].text.strip() elems = sp.find_all(href=re.compile(\"work.genre\")) tags = [] for e in elems: tags.append(e.getText()) print(pageTitle, end=\" \") print(tags) return pageTitle, tags# メイン処理スタート# file openf = open(\"RankingList.csv\", \"w\")writer = csv.writer(f, lineterminator=\"\\n\")header = [\"Title\", \"Tags\"]writer.writerow(header)att_dict = &#123;&#125;targetURLs = getSearchTargetURLs(ranking_category_total)for url in targetURLs: # 対象URL : DLサイトランキング r = requests.get(url) # 第一引数＝解析対象 第二引数＝パーサー(何を元に解析するか：この場合はHTML) soup = BeautifulSoup(r.content, \"html.parser\") idx = 0 # ランキングの順に従ってプロダクト名を取得する for rank in soup.select(\"dt.work_name\"): idx+=1 # タグ込文字列から個別ページへのURLを抽出（ひとつだけなのでfind_allでなくfind） tgturl = rank.find('a', href=True) # rankにはタグ等の情報も含まれているため、タイトルだけ抽出する # product_title = rank.getText() # product_title = product_title.strip() # print(str(idx) + \" \" + product_title + \" \" + str(tgturl['href'])) # タグ抽出用関数に個別ページのURLを渡し、タグ群を取得 title, tags = getAttributeTags(tgturl['href']) # &#123;タグ, そのタグを発見した数&#125;の形式で連想配列に格納。 for tag in tags: att_dict[tag] = (att_dict.get(tag) or 0) + 1 tags.insert(0, title) writer.writerow(tags) if (idx == 10) : break sleep(SCRAPING_INTERVAL_TIME) sleep(61)f.close()# 発見したタグとその数の一覧をCSV出力f = open(\"TagList.csv\", \"w\")writer = csv.writer(f, lineterminator=\"\\n\")header = [\"Tag\", \"Count\"]writer.writerow(header)csvline = []for att in att_dict : csvline = [att, att_dict[att]] writer.writerow(csvline)f.close() What am I doing? This is simple. Access to Ranking page. If there’s paging, Get all URLs. Move to each product page on Ranking. Get “Title” and “Tags”. And also create CSV file of Title, Tag1, Tag2, Tag3, ... and Tag, Count of this Tag. It may use for analyze later… I think Title-text doesn’t have copyright. But just in case, Title is I don’t recommend try to translate this texts. 123456789Title,Tags堕落***,女王様/お姫様,ラブラブ/あまあま,退廃/背徳/インモラル,中出し,処女制服***,癒し,バイノーラル,少女,耳かき,ラブラブ/あまあま,ほのぼの無口***,少女,セーラー服,電車,無理矢理,中出し,調教【バ***,癒し,お姉さん,着物/和服,耳かき,中出し,フェラチオおい***,逆転無し,人外娘/モンスター娘,ファンタジー,丸呑み,逆レイプ,男性受け(F***,バイノーラル,足コキ,パイズリ,言葉責め,焦らし,男性受けウラ***,ポリゴン,首輪/鎖/拘束具,ムチ/縄/蝋燭,売春/援交,調教,監禁ニプ***,連続絶頂,戦士,バニーガール,アヘ顔,ツインテール,巨乳/爆乳 12345678910Tag,Countポニーテール,6輪姦,23スーツ,1メガネ,2盗撮,1陵辱,58ヤクザ/裏社会,1女王様/お姫様,9口内射精,2 Frequency tags as this. Everyone likes おっぱい… What use for? Can I find correlations? For exsample… Maybe “ASMR, 耳かき” many times appear in same time. “逆レイプ, 言葉責め, 男性受け” also. Conversely, “陵辱, ラブラブ/あまあま” doesn’t have any correlation. Maybe. Might as well, I corrected this data. Use somehow by python and analyze. Result of frequent tags combination survey, Go to next part.","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"https://we-yu.github.io/tags/Python/"},{"name":"Web-scraping","slug":"Web-scraping","permalink":"https://we-yu.github.io/tags/Web-scraping/"}]},{"title":"pythonによる紳士達の性癖分析：データ分析編","slug":"pythonによる紳士達の性癖分析：データ分析編","date":"2019-03-24T16:12:01.000Z","updated":"2019-03-27T17:57:18.506Z","comments":true,"path":"2019/03/24/pythonによる紳士達の性癖分析：データ分析編/","link":"","permalink":"https://we-yu.github.io/2019/03/24/pythonによる紳士達の性癖分析：データ分析編/","excerpt":"","text":"Analyzing Gentlemen’s fetishism by Web-scraping from Doujin-game site : 2stThis time analyze 2 CSV files that created on previous article.Analyze scraping result. Targets are 2 files that created on last time Maybe we can do many ways. But just this now, Check Strong relevant tags. For example, “Wife” tag has low-relevant with “Loli”. But maybe strong-relevant with “Milf”. Still shows Unmannered keywords as this. Be careful. Flow of processing First, Prepare 2-dimensional-array (table) as this. - ポニーテール 輪姦 スーツ メガネ 盗撮 陵辱 … ポニーテール 0 0 0 0 0 0 … 輪姦 0 0 0 0 0 0 … スーツ 0 0 0 0 0 0 … メガネ 0 0 0 0 0 0 … 盗撮 0 0 0 0 0 0 … 陵辱 0 0 0 0 0 0 … : : : : : : : - Same values in records, columns. Finally this is Square &amp; Zero matrix. We already created “tags count” CSV on last time. Read “Title, Tags” CSV. Correspond cell increment as +1. For example, If read tags as 輪姦, 陵辱, ポニーテール. (Maybe this product some ponytail girl will be suffer) After that, Above table changes as this. - ポニーテール 輪姦 スーツ メガネ 盗撮 陵辱 … ポニーテール 0 1 0 0 0 1 … 輪姦 1 0 0 0 0 1 … スーツ 0 0 0 0 0 0 … メガネ 0 0 0 0 0 0 … 盗撮 0 0 0 0 0 0 … 陵辱 1 1 0 0 0 0 … : : : : : : : - Then next. Read tags as スーツ, 輪姦, 陵辱. (Might be suit lady got some terrible trouble) - ポニーテール 輪姦 スーツ メガネ 盗撮 陵辱 … ポニーテール 0 1 0 0 0 1 … 輪姦 1 0 1 0 0 2 … スーツ 0 1 0 0 0 1 … メガネ 0 0 0 0 0 0 … 盗撮 0 0 0 0 0 0 … 陵辱 1 2 1 0 0 0 … : : : : : : : - Continue as this for all products in ranking. Analyze Which tags combination is most close? 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106# coding: UTF-8import csvimport copyfrom collections import deque# CSV読み込み・配列の添字・二次元辞書・キュー# ランキング製品のタグの組み合わせの数をカウントする。RANKING_CSV_FILENAME = 'RankingList.csv'DLTAGS_CSV_FILENAME = 'TagList.csv'# 頻出すぎたり性癖に直結しない系統のタグはいったん外す。IGNORE_TAGS = (\"バイノーラル\", \"中出し\")# ランキング作品のタグ群を配列に読み込む。csv_file = open(RANKING_CSV_FILENAME, \"r\")f = csv.reader(csv_file, delimiter=\",\", doublequote=True, lineterminator=\"\\r\\n\", quotechar='\"', skipinitialspace=True)header = next(f)productMatrix = []for row in f: # 左端はタイトルなので今回は不要。読み飛ばすため[1:]で指定。 t = row[1:] # タグが無い作品については無視する if (len(t) &gt; 0) : productMatrix.append(t)# タグリストを読み込む（以降これは変更されない）tags = []csv_file = open(DLTAGS_CSV_FILENAME, \"r\")f = csv.reader(csv_file, delimiter=\",\", doublequote=True, lineterminator=\"\\r\\n\", quotechar='\"', skipinitialspace=True)header = next(f)for row in f: tags.append(row[0])# [tags][tags]の二次元辞書を生成する。tagMatrix = &#123;&#125;for x in tags : for y in tags : if not (x in tagMatrix): tagMatrix[x] = &#123;&#125; # 初期値は0とする tagMatrix[x][y] = 0# productMatrixの1rowが「1製品の持つタグ群」になる。for x in productMatrix : # 暫定処理。現状、タグの設定が[\"xxx\", \"yyy]だった場合はtagMatrix[\"xxx\"][\"yyy\"]と[\"yyy\"][\"xxx\"]の両方でカウントする。 # 必要なのは「組み合わせの数」なのでどちらかだけでよい。（最終的には疎行列かつ三角行列になるはず） for y in x : for z in x : tagMatrix[y][z] += 1 for z in x: for y in x: tagMatrix[y][z] += 1# 頻出ランキング作成のためにサイズ5のキューを作成する。ranq = deque([], 5)# Qへの初期値設定qInit = &#123;\"val\": -1, \"x\": \"\", \"y\": \"\"&#125;ranq.appendleft(qInit)# tax*tagでマトリクスの全要素へアクセス可能。for x in tags : for y in tags : is_continue = False # 対角要素は意味がないのですべて-1とする。 if (x == y) : tagMatrix[x][y] = -1 # Qの左端要素の「出現回数」を超過するものがあった場合、当該要素をQの左側から入れる。 if (tagMatrix[x][y] &gt; ranq[0][\"val\"]) : for ignore in IGNORE_TAGS : if(x == ignore or y == ignore) : is_continue = True break if(is_continue) : continue max = &#123;\"val\":tagMatrix[x][y], \"x\":x, \"y\":y&#125; ranq.appendleft(max)# CSVのヘッダ行生成。左端に\"-\"を入れる。h = copy.deepcopy(tags) # 強いコピーh.insert(0, \"-\")csvHeader = \",\".join(h)# タグの出現数をまとめた二次元配列出力f = open(\"TagMatrix.csv\", \"w\")writer = csv.writer(f, lineterminator=\"\\n\")writer.writerow(h)csvLine = []for x in tags : # csvLine = [tag名, tag1との組み合わせ数, tag2との組み合わせ数, tag3との組み合わせの数…]という構成になる。 csvLine.append(x) for y in tags : csvLine.append(tagMatrix[x][y]) writer.writerow(csvLine) csvLine.clear()f.close()# 頻出の組み合わせを出力for rq in ranq : print(rq[\"val\"], rq[\"x\"], rq[\"y\"]) This is all code. Sorry I’m not expert about Python, Maybe this is not clean code. Table on top of article export as CSV. (It easy to use for spreadsheet application) Diagonal elements are unnecessary. Any value is ok, Just this time set as -1. View result data Finally I got some data. Try to do something. Pickup some frequent tags. 巨乳/爆乳, 陵辱, ラブラブ/あまあま, 男性受け, 人外娘/モンスター娘 : (Boobs, Insult, Lovelove/Sweet, Femdom, Monster-girl) Put this tags as vertical. Let me check frequent tags… Boobs わかりみ。 Insult Syokusyu(Tentacles) is traditional Japanese culture since Katsushika Hokusai… Maybe. Lovelove-Sweet On this case, a lot of positive image tags. Femdom Oh… yeah. Monster-girl Next. Pickup more “Particular” tags. (Some gentlemen has strong feeling for this habits) NTR NTR and Netorare, They are 2 sides of the same coin… Futanari Maybe enemy Mistress force to downfall(to darkside) for heroines. Darkside From this side, Maybe Mahou-shoujo going to be brainwashed, That is always. None-reversal Strong combination of None-reversal, Femdom, Reversed rape Summarize Quite fan. Loose ends Now get frequent tags by deque. Maybe still remain some issues. Need to enhance. By Python, If use Data format we can make matrix more easy? We want to know only “Tags combination” For example, tagMatrix[&quot;陵辱&quot;][&quot;ポニーテール&quot;] and tagMatrix[&quot;ポニーテール&quot;][&quot;陵辱&quot;], 1 side is enough. Now this is Diagonal matrix. But finally Upper(Lower) triangular matrix is enough. Maybe 6 tags are maximum of 1 product. Search more products, Matrix getting huge. But almost elements are 0. This is Sparse matrix. I don’t think modern PC memory flood by 1000 or 2000 tags, But anyway we should use waist resources. I want to install sparse-matrix algorithm. As Y-Matrix my old work. Can I add Weight for tags combination from Ranking-score and sells-score. It was good practice for Python. But I don’t have idea how to use it. If I make good learning, Can I do predict next coming popular genre…? If you have some ideas, Please post here Or Above CSV is here. You may use this for your ideas.","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"https://we-yu.github.io/tags/Python/"},{"name":"Doujin-game","slug":"Doujin-game","permalink":"https://we-yu.github.io/tags/Doujin-game/"}]},{"title":"sympyによる導関数の算出・描画","slug":"sympyによる導関数の算出・描画","date":"2019-03-24T15:38:35.000Z","updated":"2019-03-27T17:55:23.545Z","comments":true,"path":"2019/03/24/sympyによる導関数の算出・描画/","link":"","permalink":"https://we-yu.github.io/2019/03/24/sympyによる導関数の算出・描画/","excerpt":"","text":"Calculate &amp; Draw Derived function by simpyUse simpy, Drawing Derived function graph.Calculate &amp; Draw Derived function Detail setting should be investigate later. On First step, make it as most simple. 1234567891011import sympy as syx = sy.Symbol('x')f = (1 * x**3) + (0 * x**2) + (-2 * x) + (0)print fg = f.diff()print gsy.plot(f, g, (x, -2, 2)) 123hogehoge$ python plot2.pyx**3 - 2*x3*x**2 - 2","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"https://we-yu.github.io/tags/Python/"},{"name":"Python2.7","slug":"Python2-7","permalink":"https://we-yu.github.io/tags/Python2-7/"},{"name":"simpy","slug":"simpy","permalink":"https://we-yu.github.io/tags/simpy/"}]},{"title":"Udemy - ゼロからPythonで学ぶ人工知能と機械学習 : ニューラルネットワークまとめ","slug":"Udemy-ゼロからPythonで学ぶ人工知能と機械学習-ニューラルネットワークまとめ","date":"2019-03-23T10:41:32.000Z","updated":"2019-03-27T17:57:54.410Z","comments":true,"path":"2019/03/23/Udemy-ゼロからPythonで学ぶ人工知能と機械学習-ニューラルネットワークまとめ/","link":"","permalink":"https://we-yu.github.io/2019/03/23/Udemy-ゼロからPythonで学ぶ人工知能と機械学習-ニューラルネットワークまとめ/","excerpt":"","text":"Udemy - ゼロからPythonで学ぶ人工知能と機械学習 : ニューラルネットワークまとめみんなのAI講座 ゼロからPythonで学ぶ人工知能と機械学習AI Class : Learn AI and MachineLearning by Python from scratch Overall This is overall for me, About Neuron Network session. Neuron Class This is define of Neuron that works as node in network. IN:OUT is N:1. Input is multiple, But output is always 1. (However, Output destination is not always only one) 123456789101112131415class Neuron: input_sum = 0.0 # 最終的にこの値が少しずつ増える output = 0.0 # output用 def setInput(self, inp): self.input_sum += inp def getOutput(self): self.output = sigmoid(self.input_sum) return self.output # input/output values intialize def reset(self): self.input_sum = 0 self.output = 0 Neural Network Class Define of Neural Network constructed by several Neurons. w_im = 3 weights for value of [Input-Neuron -&gt; Middle-Neuron] and [Bias -&gt; M-Neuron]. Same as this, [w_mo] is Weights of Middle -&gt; Output layer. If code like C, Number of weights of w_im[x][y]. Each value means x = Number of Input nodes, y = Number of Destination nodes. On this code, Inputs are Neuron, Neuron, Bias. Destinations are Neuron, Neuron (Bias is not node). Finally 3 * 2, Total 6 weights. Defined nodes are 3 + 3 + 1. Initial output of Input Neurons are fixed by 0, 0. And Bias also fixed as 1.0. 1234567891011121314class NeuralNetwork: # 入力値の重みづけ # 入力層・中間層間の重み w_im = [[0.496, 0.512], [-0.501, 0.998], [0.498, -0.502]] # 第一入力NEU→各中間NEUの重み, 第二入力NEU→各中間NEUの重み, 入力バイアス→各中間NEUの重み # 中間層・出力層間の重み w_mo = [0.121, -0.4996, 0.200] # 第一中間NEU→出力NEUの重み, 第二中間NEU→出力NEUの重み, 中間バイアス→出力NEUの重み # 各層宣言 # 入力層：N（ニューロン）、N、バイアス 入力層は数値がそのまま入る input_layer = [0.0, 0.0, 1.0] # 中間層：Nインスタンス、Nインスタンス、バイアス middle_layer = [Neuron(), Neuron(), 1.0] # Nはひとつだけ output_layer = Neuron() Commit function Input 2 values (On this time, input_data[0/1] is latitude and longitude), And each weights. Get finally network output(= Last node’s output). For example, Input for Middle-1st-node. This value get from Each input-node-output * weight + Bias * weight. Bias’s output is always same. But Input from Bias is changeable. 12345678910111213141516171819202122232425262728# Receive inputs,def commit(self, input_data): # 各層ニューロン初期化 self.input_layer[0] = input_data[0] self.input_layer[1] = input_data[1] self.middle_layer[0].reset() self.middle_layer[1].reset() self.output_layer.reset() # 入力層→中間層 # 第一中間ニューロンに入力３つ nr_idx = 0 self.middle_layer[nr_idx].setInput(self.input_layer[0] * self.w_im[0][nr_idx]) # 第一入力N出力値×対応重み self.middle_layer[nr_idx].setInput(self.input_layer[1] * self.w_im[1][nr_idx]) self.middle_layer[nr_idx].setInput(self.input_layer[2] * self.w_im[2][nr_idx]) # バイアス # 第二中間ニューロンに入力３つ nr_idx = 1 self.middle_layer[nr_idx].setInput(self.input_layer[0] * self.w_im[0][nr_idx]) self.middle_layer[nr_idx].setInput(self.input_layer[1] * self.w_im[1][nr_idx]) self.middle_layer[nr_idx].setInput(self.input_layer[2] * self.w_im[2][nr_idx]) # バイアス # 中間層→出力層 self.output_layer.setInput(self.middle_layer[0].getOutput() * self.w_mo[0]) self.output_layer.setInput(self.middle_layer[1].getOutput() * self.w_mo[1]) self.output_layer.setInput(self.middle_layer[2] * self.w_mo[2]) # バイアス return self.output_layer.getOutput() # ニューラルネットワーク全体の出力値が帰る Learning function Finally, Code structure became as Learn-func ∋ Commit-func. Call Learning func for use Network. I have to check again Video for relearn. Anyway, After got “Output value of network”. Need to adjust each weight values. Calculate “Diff of Network-output-value and Correct-value.” By [1] value, Adjust weight between [Middle-layer and Output-layer]. By [Old M-O weight] and [2] value (New M-O weight), Calculate weight between [Input-layer and Middle-layer]. 1234567891011121314151617181920212223242526272829303132333435363738394041424344def learn(self, input_data): # 出力値 コミットに緯度と経度を渡す ニューラルネットワークの出力値が帰る output_data = self.commit([input_data[0], input_data[1]]) # 学習する correct_valueに0/1で正解/不正解 correct_value = input_data[2] # print output_data # print (correct_value - output_data) # 出力/正解値の誤差 # δmo = (出力値 - 正解値) * 出力の微分: 入力層・中間層修正にも使う # 差分が小さい／大きいときは修正量が小さくなる、真ん中ぐらいだと大きくなる # 中間層ー出力層：修正量 = δmo * 中間層の値 * 学習係数(定数：大きすぎると重みの値が発散する、小さすぎると時間がかかる) # 学習係数(定数) K = 0.3 # 出力層→中間層 # 差分 * (微分値) ※シグモイド関数による微分は「n * (1 - n)」になる。 delta_w_mo = (correct_value - output_data) * output_data * (1.0 - output_data) # 変更前重み old_w_mo = list(self.w_mo) # 重み更新 中間層出力値 * δ * 固定係数 self.w_mo[0] += self.middle_layer[0].output * delta_w_mo * K self.w_mo[1] += self.middle_layer[1].output * delta_w_mo * K self.w_mo[2] += self.middle_layer[2] * delta_w_mo * K # バイアス # δim = δmo * 中間出力の重み * 中間層微分値 # 入力層ー中間層：修正量 = δim * 入力層の値 * 学習係数 # 中間→入力層 delta_w_im = [ delta_w_mo * old_w_mo[0] * self.middle_layer[0].output * (1.0 - self.middle_layer[0].output), delta_w_mo * old_w_mo[1] * self.middle_layer[1].output * (1.0 - self.middle_layer[1].output), ] # 重み更新 中間数はニューロン２つ 入力層はバイアス+ニューロンで３つ self.w_im[0][0] += self.input_layer[0] * delta_w_im[0] * K # I1-M1 self.w_im[0][1] += self.input_layer[0] * delta_w_im[1] * K # I1-M2 self.w_im[1][0] += self.input_layer[1] * delta_w_im[0] * K # I2-M1 self.w_im[1][1] += self.input_layer[1] * delta_w_im[1] * K # I2-M2 self.w_im[2][0] += self.input_layer[2] * delta_w_im[0] * K # IB-M1 self.w_im[2][1] += self.input_layer[2] * delta_w_im[1] * K # IB-M2 # I1 = 入力層第一ニューロン M1 = 中間層第一ニューロン IB = 入力層バイアス Main process Read read as below. (Latitude, Longitude, Correct flag(0/1)) 123456735.37,138.08,035.4,138.4,035.08,138.05,135.14,138.23,035.26,137.84,1:: Instantiate Neural Network, Then kick learning 1000*100 times. print for learned weights. 1234567891011121314151617181920212223242526272829303132333435363738# 基準点(データの範囲を0.0〜1.0内に収める為)refer_point_0 = 34.5refer_point_1 = 137.5# Read datai = 0training_data = []training_data_file = open(\"training_data.txt\", \"r\")for line in training_data_file: i += 1 line = line.rstrip().split(\",\") # 改行を取り除き,で分ける training_data.append([float(line[0]) - refer_point_0, float(line[1]) - refer_point_1, int(line[2])])training_data_file.close()# print training_data# Create NeuralNework instanceneural_network = NeuralNetwork()# 学習（一度のみ）# neural_network.learn(training_data[0])# 学習（繰り返し）for t in range (0, 1000) : # 1000回学習 ii = 0 for data in training_data : # 各データに対し実施（100回） if ((t % 100 == 0) and (ii == 0 or ii == 1)): print t, \":\", print neural_network.w_im, print neural_network.w_mo ii += 1 neural_network.learn(data) # t * 100回学習print neural_network.w_imprint neural_network.w_mo Plot for Training data, Real data. Classificate read data from text. And real latitude, longitude data. Around here, We have to check again on class. 123456789101112131415161718192021222324252627282930313233343536373839# 訓練用データ表示の準備position_tokyo_leaning = [[], []]position_kanagawa_leaning = [[], []]for data in training_data: if data[2] &lt; 0.5: # 正解値が0.5以下（＝0）である場合 position_tokyo_leaning[0].append(data[1] + refer_point_1) # 経度 position_tokyo_leaning[1].append(data[0] + refer_point_0) # 緯度 else: position_kanagawa_leaning[0].append(data[1] + refer_point_1) position_kanagawa_leaning[1].append(data[0] + refer_point_0)# 実データで実行（答え合わせ）data_to_commit = [[34.6, 138.0], [34.6, 138.18], [35.4, 138.0], [34.98, 138.1], [35.0, 138.25], [35.4, 137.6], [34.98, 137.52], [34.5, 138.5], [35.4, 138.1]]for data in data_to_commit : # 緯度経度を0-1の中に収める data[0] -= refer_point_0 data[1] -= refer_point_1# 分類したデータを格納するposition_tokyo_learned = [[], []]position_kanagawa_learned = [[], []]for data in data_to_commit: if neural_network.commit(data) &lt; 0.5 : position_tokyo_learned[0].append(data[1] + refer_point_1) position_tokyo_learned[1].append(data[0] + refer_point_0) else: position_kanagawa_learned[0].append(data[1] + refer_point_1) position_kanagawa_learned[1].append(data[0] + refer_point_0)plt.scatter(position_tokyo_leaning[0], position_tokyo_leaning[1], c=\"red\", label=\"Tokyo_Learn\", marker=\"+\")plt.scatter(position_kanagawa_leaning[0], position_kanagawa_leaning[1], c=\"blue\", label=\"Kanagawa_Learn\", marker=\"+\")# 分類データplt.scatter(position_tokyo_learned[0], position_tokyo_learned[1], c=\"red\", label=\"Tokyo_Learn\", marker=\"*\")plt.scatter(position_kanagawa_learned[0], position_kanagawa_learned[1], c=\"blue\", label=\"Kanagawa_Learn\", marker=\"*\")plt.legend()plt.show()","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"https://we-yu.github.io/tags/Python/"},{"name":"Udemy","slug":"Udemy","permalink":"https://we-yu.github.io/tags/Udemy/"},{"name":"MachineLearning","slug":"MachineLearning","permalink":"https://we-yu.github.io/tags/MachineLearning/"}]},{"title":"Udemy - ゼロからPythonで学ぶ人工知能と機械学習 : 数学系処理／ニューロン編","slug":"Udemy-ゼロからPythonで学ぶ人工知能と機械学習-数学系処理／ニューロン編","date":"2019-03-22T19:21:12.000Z","updated":"2019-03-27T17:57:45.042Z","comments":true,"path":"2019/03/23/Udemy-ゼロからPythonで学ぶ人工知能と機械学習-数学系処理／ニューロン編/","link":"","permalink":"https://we-yu.github.io/2019/03/23/Udemy-ゼロからPythonで学ぶ人工知能と機械学習-数学系処理／ニューロン編/","excerpt":"","text":"Udemy - ゼロからPythonで学ぶ人工知能と機械学習 : 数学系処理／ニューロン編みんなのAI講座 ゼロからPythonで学ぶ人工知能と機械学習AI Class : Learn AI and MachineLearning by Python from scratch Package import Preferences or Setting -&gt; [Project Name] -&gt; Project Interpreter If there’s warnings about packaging tool, install that at the time of package unable to import. I got error to import matplotlib. Searched by error-message, Finally I got it by this solution. http://zashikiro.hateblo.jp/entry/2012/10/02/130031 https://stackoverflow.com/questions/44318333/unable-to-import-matplotlib-pyplot Plot Linear function Use matplotlib, numpy packages. On Python, Able to package define as alias. 12345678x = np.arange(0, 10, 0.1) # 0〜9.9を0.1刻みで作ったものをリスト形式で格納print xy = 2 * x + 1 # xリストの各要素を二倍し、+1するprint yplt.plot(x, y) # 作成したx,yで二次元グラフ描画plt.show() By plt.show(), Able to draw as this graph. On this Window, Able to Move, Zoom-in/out, Change range. Plot Quadratic, Cubic functions If you make function, Able to draw over Quadratic functions. Stack function into same alias, Draw graph in same Window. 123456789101112131415161718import matplotlib.pyplot as pltimport numpy as npx = np.arange(-5, 15, 0.1)print x# 二次関数生成# y = x^2 - 10x + 10y_2 = x**2 - 10*x + 10plt.plot(x, y_2)# 三次関数生成# y = x^3 - 10x^2 - 10x + 10y_3 = x**3 - 10*x**2 - 10*x + 10plt.plot(x, y_3)# pltに放り込まれた関数を描画plt.show() Sigmoid Non-local value and Non-argument value (Napier) in user defined function. This is defined outer of function. Is it nothing any issues? (Defined in main func, Used in sigmoid func) On this time value equals defined on just before call function? e is constant value… Can I use math.e in local func? By Python manner, Is it nothing issues “Unidentified” values in function? 123456789101112131415def sigmoid(a): # y = 1 / (1 + e^(-1)) s = 1 / (1 + e**-a) return se = math.edx = 0.1x = np.arange(-8, 8, dx)print xy_sig = sigmoid(x)plt.plot(x, y_sig)plt.show() Label At .plot, set label = &quot;string&quot; then use .legend. It able to add Name in graph. 123456789101112131415161718192021222324import matplotlib.pyplot as pltimport numpy as npimport mathdef sigmoid(a): s = 1 / (1 + math.e**-a) return sdx = 0.1x = np.arange(-8, 8, dx)print x# シグモイド関数y_sig = sigmoid(x)# シグモイド関数の傾き算出y_dsig = (sigmoid(x+dx) - sigmoid(x)) / dx# シグモイド関数の微分dy_sig = sigmoid(x) * (1 - sigmoid(x))plt.plot(x, y_sig, label = \"sigmoid\")plt.plot(x, y_dsig, label = \"d_sigmoid\")plt.plot(x, dy_sig, label = \"dy_sigmoid\")plt.legend() # plot時にラベルを付与し、legendを呼び出すことで描画グラフに名称が付くplt.show() Sample of Neural Network input/output Neural Network sample script. Stack values in list. Finally shows sum. Finally, Get 1 output from several input. 1234567891011121314151617181920212223242526272829# Neuron classclass Neuron : input_sum = 0.0 # 最終的にこの値が少しずつ増える output = 0.0 # output用 def setInput(self, inp): self.input_sum += inp def getOutput(self): self.output = self.input_sum return self.output# Neural Newrok classclass NeuralNetwork: # Create Neuron instance neuron = Neuron() # Receive inputs, def commit(self, input_data): for data in input_data: # setInputメソッドに各入力を与えていく self.neuron.setInput(data) return self.neuron.getOutput()# Create NeuralNework instanceneural_network = NeuralNetwork()# Executetrial_data = [1.0, 2.0, 3.0]print \"Output =\", neural_network.commit(trial_data) 1Output = 6.0 Neural Network, Single Neuron sample It is getting harder… Get output from Sigmoid func as 1 / (1 + e^-x) A point “Input” is latitude(λ), longitude(θ), bias(b). Finally get “Output”. On this time, Calculate output by sigmoid(λ * w0 + θ * w1 + b * w2 ). Set threshold as 0.5f. Judge Tokyo/Kanagawa. If input value to sigmoid func is loo much bigger or lower, Learning won’t be work. Make input between 0.0f-1.0f, Use offset value refer_point_0/1, Adjust input value to neuron. (Reverse value at the time of graph drawing) 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586# coding: UTF-8import matplotlib.pyplot as pltimport math# シグモイド関数定義def sigmoid(a): # math.exp(-a) = e^-1 return (1.0 / (1.0 + math.exp(-a)))# Neuron classclass Neuron : input_sum = 0.0 # 最終的にこの値が少しずつ増える output = 0.0 # output用 def setInput(self, inp): self.input_sum += inp def getOutput(self): self.output = sigmoid(self.input_sum) return self.output # input/output values intialize def reset(self): self.input_sum = 0 self.output = 0# Neural Newrok classclass NeuralNetwork: # 入力値の重みづけ w = [-0.5, 0.5, -0.2] # [2]はバイアス重み # Create Neuron instance neuron = Neuron() # Receive inputs, def commit(self, input_data): self.neuron.reset() bias = 1.0 self.neuron.setInput(input_data[0] * self.w[0]) self.neuron.setInput(input_data[1] * self.w[1]) self.neuron.setInput(bias * self.w[2]) return self.neuron.getOutput()# 基準点(データの範囲を0.0〜1.0内に収める為)refer_point_0 = 34.5refer_point_1 = 137.5# Read datai = 0trial_data = []trial_data_file = open(\"trial_data.txt\", \"r\")for line in trial_data_file: i += 1 line = line.rstrip().split(\",\") # 改行を取り除き,で分ける # print (float(line[0]) - refer_point_0), (float(line[1]) - refer_point_1) trial_data.append([float(line[0]) - refer_point_0, float(line[1]) - refer_point_1])trial_data_file.close()# Create NeuralNework instanceneural_network = NeuralNetwork()# Executeposition_tokyo = [[], []] # [経度, 緯度]position_kanagawa = [[], []] # [経度, 緯度]for data in trial_data: # cmt = sigmoid(data[0] + data[1]) cmt = neural_network.commit(data) print data[0], data[1], print '&#123;:.2f&#125;'.format(cmt), if cmt &lt; 0.5: print \"TKO\" position_tokyo[0].append(data[1] + refer_point_1) # add 経度 position_tokyo[1].append(data[0] + refer_point_0) # add 緯度 else: print \"KNGW\" position_kanagawa[0].append(data[1] + refer_point_1) # add 経度 position_kanagawa[1].append(data[0] + refer_point_0) # add 緯度# trial_data = [1.0, 2.0, 3.0]# print \"Output =\", neural_network.commit(trial_data)# 合計値が0の時は0.5、正方向に増えると１に漸近、小さくなると０に漸近# 散布図描画plt.scatter(position_tokyo[0], position_tokyo[1], c = \"red\", label = \"Tokyo\", marker = \"+\")plt.scatter(position_kanagawa[0], position_kanagawa[1], c = \"blue\", label = \"Kanagawa\", marker = \"+\")plt.legend()plt.show() Neural Network, 3 Layers Network sample (Unsupervised) Construct as 3 layers (Input-layer, Middle-layer, Output-layer) Each outputs from Input neurons&amp;bias, Use as inputs for Middle neurons. Same as this way from Middle to Output. Add “Weight” each values between Neurons. Output from Final Neuron, That is finally output of this network. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110# coding: UTF-8import matplotlib.pyplot as pltimport math# シグモイド関数定義def sigmoid(a): # math.exp(-a) = e^-1 return (1.0 / (1.0 + math.exp(-a)))# Neuron classclass Neuron : input_sum = 0.0 # 最終的にこの値が少しずつ増える output = 0.0 # output用 def setInput(self, inp): self.input_sum += inp def getOutput(self): self.output = sigmoid(self.input_sum) return self.output # input/output values intialize def reset(self): self.input_sum = 0 self.output = 0# Neural Newrok classclass NeuralNetwork: # 入力値の重みづけ # 入力層・中間層間の重み w_im = [[0.496, 0.512], [-0.501, 0.998], [0.498, -0.502]] # 第一入力NEU→各中間NEUの重み, 第二入力NEU→各中間NEUの重み, 入力バイアス→各中間NEUの重み # 中間層・出力層間の重み w_mo = [0.121, -0.4996, 0.200] # 第一中間NEU→出力NEUの重み, 第二中間NEU→出力NEUの重み, 中間バイアス→出力NEUの重み # 入力層：N（ニューロン）、N、バイアス 入力層は数値がそのまま入る input_layer = [0.0, 0.0, 1.0] # 中間層：Nインスタンス、Nインスタンス、バイアス middle_layer = [Neuron(), Neuron(), 1.0] # Nはひとつだけ output_layer = Neuron() # Receive inputs, def commit(self, input_data): # 各層ニューロン初期化 self.input_layer[0] = input_data[0] self.input_layer[1] = input_data[1] self.middle_layer[0].reset() self.middle_layer[1].reset() self.output_layer.reset() # 入力層→中間層 # 第一中間ニューロンに入力３つ nr_idx = 0 self.middle_layer[nr_idx].setInput(self.input_layer[0] * self.w_im[0][nr_idx]) # 第一入力N出力値×対応重み self.middle_layer[nr_idx].setInput(self.input_layer[1] * self.w_im[1][nr_idx]) self.middle_layer[nr_idx].setInput(self.input_layer[2] * self.w_im[2][nr_idx]) # バイアス # 第二中間ニューロンに入力３つ nr_idx = 1 self.middle_layer[nr_idx].setInput(self.input_layer[0] * self.w_im[0][nr_idx]) self.middle_layer[nr_idx].setInput(self.input_layer[1] * self.w_im[1][nr_idx]) self.middle_layer[nr_idx].setInput(self.input_layer[2] * self.w_im[2][nr_idx]) # バイアス # 中間層→出力層 self.output_layer.setInput(self.middle_layer[0].getOutput() * self.w_mo[0]) self.output_layer.setInput(self.middle_layer[1].getOutput() * self.w_mo[1]) self.output_layer.setInput(self.middle_layer[2] * self.w_mo[2]) # バイアス return self.output_layer.getOutput() # ニューラルネットワーク全体の出力値が帰る# 基準点(データの範囲を0.0〜1.0内に収める為)refer_point_0 = 34.5refer_point_1 = 137.5# Read datai = 0trial_data = []trial_data_file = open(\"trial_data.txt\", \"r\")for line in trial_data_file: i += 1 line = line.rstrip().split(\",\") # 改行を取り除き,で分ける # print (float(line[0]) - refer_point_0), (float(line[1]) - refer_point_1) trial_data.append([float(line[0]) - refer_point_0, float(line[1]) - refer_point_1])trial_data_file.close()# Create NeuralNework instanceneural_network = NeuralNetwork()# Executeposition_tokyo = [[], []] # [経度, 緯度]position_kanagawa = [[], []] # [経度, 緯度]for data in trial_data: # cmt = sigmoid(data[0] + data[1]) cmt = neural_network.commit(data) print data[0], data[1], print '&#123;:.2f&#125;'.format(cmt), if cmt &lt; 0.5: print \"TKO\" position_tokyo[0].append(data[1] + refer_point_1) # add 経度 position_tokyo[1].append(data[0] + refer_point_0) # add 緯度 else: print \"KNGW\" position_kanagawa[0].append(data[1] + refer_point_1) # add 経度 position_kanagawa[1].append(data[0] + refer_point_0) # add 緯度# 散布図描画plt.scatter(position_tokyo[0], position_tokyo[1], c = \"red\", label = \"Tokyo\", marker = \"+\")plt.scatter(position_kanagawa[0], position_kanagawa[1], c = \"blue\", label = \"Kanagawa\", marker = \"+\")plt.legend()plt.show()","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"https://we-yu.github.io/tags/Python/"},{"name":"Udemy","slug":"Udemy","permalink":"https://we-yu.github.io/tags/Udemy/"},{"name":"MachineLearning","slug":"MachineLearning","permalink":"https://we-yu.github.io/tags/MachineLearning/"}]},{"title":"FGO - For FGO(Apple), Purchasing quartz from outside of Japan.","slug":"FGO-For-FGO-Apple-Purchasing-quartz-from-outside-of-Japan","date":"2019-03-21T16:01:28.000Z","updated":"2019-03-27T17:58:41.324Z","comments":true,"path":"2019/03/21/FGO-For-FGO-Apple-Purchasing-quartz-from-outside-of-Japan/","link":"","permalink":"https://we-yu.github.io/2019/03/21/FGO-For-FGO-Apple-Purchasing-quartz-from-outside-of-Japan/","excerpt":"","text":"FGO - For FGO(Apple), Purchasing quartz from outside of Japan.Disclaimer Sign up, Credit card registration, purchasing, please do it by your own responsibility. Precondition Long stay in outside of Japan. Already registered Local credit card. (Non-JP Card) Japanese Credit card No have or Expired. Target game is Japanese FGO (FGOjp) Conclusion Purchase by Android, Play on iPhone To get FGOjp FGOjp download available only in Japanese store. For both of Android and Apple versions. To get FGOjp, That is not difficult if you were living in outside of Japan. Change your current location by VPN, Or register AppleStore account make as Japanese local. (2018/Aug, No need register Credit to make account) After complete installation, As long as connect with internet, You can play FGOjp anywhere. This is not main topic… But if you want to play in comfortable speed, I’d strongly recommend play in Apple version. To purchase This is free-to-play game. It is easy way to get, install, and play.However, If you try to purchase, You may get this message and fail to pay. 購入できません 指定されたプロダクトデータが取得できませんでした Unpurchasable. Failed to get target product data Hypothesis To purchase Japanese game, Might be ApplreStore requires Credit Cared registered or Balance remained in Japanese account. And Japanese Account only accepts Japanese Credit card. By this 2 case, Residents outside of Japan, They have been checkmate. At purchasing time, If switch to “Credit Card registered account”(Your main account), It also failed. Might be cancelled to purchase for “Application that isn’t exist in Account’s region” For example. If you have “USA AppleStore Account” and that is already registered your Credit. But AppleStore:USA Doesn’t have FGOjp, That purchasing will be cancel. To solve By that results. Realistic solving way to purchase. That is … Before purchasing, Migrate your account to Android FGOjp. Move to Da Vinci workshop in game. Purchase quartz as much you want. Migrate account again, Back to Apple version. Roll your Gacha! Roll! Roll!! Roll!!! You got it! Loose endsAll of this section is expected from above results. Nothing any warranty exists. May succeed your purchasing if exist remaining balance in Japanese AppleStore account. This article has precondition of Nothing any Japanese Credit cardHowever, If you get JPY(￥) iTunes card, No need JP-Credit anymore. There is store that sells JP-iTunes card at near of you. Your friend who going to Japan temporarily, or Come from Japan. Ask him to buy JP-iTunes card. Use online shop to buy JP-iTunes card. As this way, If you get JPY iTunes card and succeed to top-up your Japanese AppleStore account. It might be don’t have to do annoying ping-pong account migration. For other games Currently I play only FGO. I focused FGO on this article. But maybe you can purchase for other similar (Only for Japan, Free-to-play) games. If you want to try, Please do it by your own responsibility.","categories":[],"tags":[{"name":"Apple","slug":"Apple","permalink":"https://we-yu.github.io/tags/Apple/"},{"name":"FGO","slug":"FGO","permalink":"https://we-yu.github.io/tags/FGO/"},{"name":"課金","slug":"課金","permalink":"https://we-yu.github.io/tags/課金/"},{"name":"ソシャゲ","slug":"ソシャゲ","permalink":"https://we-yu.github.io/tags/ソシャゲ/"},{"name":"purchase","slug":"purchase","permalink":"https://we-yu.github.io/tags/purchase/"},{"name":"Game","slug":"Game","permalink":"https://we-yu.github.io/tags/Game/"}]},{"title":"Udemy Learning : Unity 3D迷路ゲーム開発入門","slug":"Udemy-Learning-Unity-3D迷路ゲーム開発入門","date":"2019-03-21T15:22:29.000Z","updated":"2019-03-27T17:58:09.434Z","comments":true,"path":"2019/03/21/Udemy-Learning-Unity-3D迷路ゲーム開発入門/","link":"","permalink":"https://we-yu.github.io/2019/03/21/Udemy-Learning-Unity-3D迷路ゲーム開発入門/","excerpt":"","text":"Udemy Learning : Unity 3D迷路ゲーム開発入門Udemy Learning : Unity 3D迷路ゲーム開発入門Interest points (Should be remember) 10. whileによってプログラムを何度も実行しよう (How to control numbers of execution by using While) Attach to Unity, Insert Breakpoint. 18. 配列変数のすべての要素を対象としたLINQ処理を使おう (LINQ that is like SQL) How to use LINQ, Lambda. 21. .変数の値型と参照型を使い分けよう (Two types of variable: value and reference) What is type of value, type of reference. What’s happen if change value inside function. 23. メソッドとの情報のやり取りについてまとめよう (interface between caller and callee of a method) Argument of ref, out. Named Argument, Omittable Argument. 28. ロボットを配置しよう (Arrangement of robots) World space : Coordinates in 3D world. Screen space : Grid of Camera-view. Origin(1, 1) is left-bottom of view. Maximum is Undefined. (Depend on screen resolution) View-port space : Grid of Camera-view. Origin(1, 1) is right-top of view. Maximum is (1.0f, 1.0f). This is relative value. For example, (0.5f, 0.5f) is always center point of view. 30. RobotMotionクラスを作成しよう (RobotMotion class that is used for animation) Action Class Nameless Function, Lambda 31. マウスクリックの動作を作成しよう (How to make an interface using mouse click) Copy value of reference. Double constructor(Call Constructor from Constructor in same Class) 39. セルを作って迷路をつくろう（その2）(Maze creation based on lattice cells (2)) Processing index for all values in array by LINQ（Use ForEach : Process for each values in array） Total Static Function = Callable function without Instantiate.","categories":[],"tags":[{"name":"Unity","slug":"Unity","permalink":"https://we-yu.github.io/tags/Unity/"},{"name":"Udemy","slug":"Udemy","permalink":"https://we-yu.github.io/tags/Udemy/"}]},{"title":"Udemy-ゼロからPythonで学ぶ人工知能と機械学習 : Python基礎編","slug":"Udemy-ゼロからPythonで学ぶ人工知能と機械学習-Python基礎編","date":"2019-03-20T15:45:09.000Z","updated":"2019-03-27T17:58:02.724Z","comments":true,"path":"2019/03/20/Udemy-ゼロからPythonで学ぶ人工知能と機械学習-Python基礎編/","link":"","permalink":"https://we-yu.github.io/2019/03/20/Udemy-ゼロからPythonで学ぶ人工知能と機械学習-Python基礎編/","excerpt":"","text":"みんなのAI講座 ゼロからPythonで学ぶ人工知能と機械学習Learning AI and Machinelearning by Python from scratch. Background of myself Never used Python Main skill is C Use C# for Unity in private. In work, Use PHP+HTML+CSS+JavaScript Set comment in multiple lines Ctrl + /Command + / Allow Japanese textAt top of file 1#config: UTF-8 Text Multiplication1234a = \"Hello\"d = a * 5print d 1HelloHelloHelloHelloHello What is Tuple?Unchangeable array. Can I use as DEFINE or Const? What is Dictionary?It’s possible to call values as Associative-array. (It can use text as index) Debugger To insert break-point, Click line-number. Stop execution at that point. To kick debug, Kick Debug&quot;File name&quot; command. Execution will be stop at break-point. Kick Step into(F7) proceed step 1 by 1. Time of Left side update, That is “Moved to next line”. List in List It can generate Vector and Matrix. 123456789a = [[2012, 2013, 2014], [2015, 2016, 2017]]b = a[1][0]print b # １番目リストの０番要素にアクセスa.append([2018, 2019])print a # リストを追加a[2].append(2020)print a # リスト内のリストに要素追加 1232015[[2012, 2013, 2014], [2015, 2016, 2017], [2018, 2019]][[2012, 2013, 2014], [2015, 2016, 2017], [2018, 2019, 2020]] Class Define Class, Define Value and Method, Instantiate. 12345678910111213141516171819# Define Classclass Dog: # property name = \"\" # Method # 必ず引数部にselfを書く def bark(self): # メソッド内でプロパティにアクセスする場合は \"self.\" が必須 m = self.name + \" : Bow-wow!\" print m# Create instancepochi = Dog()pochi.name = \"POCHI\"pochi.bark()hachi = Dog()hachi.name = \"HACHI\"hachi.bark() Class, List, and For Instantiated Instance can be Define or access as normal value, array. 123456789101112131415# Value値の自乗値をReturnするclass Calculation: value = 0 def square(self): s = self.value * self.value return scalcs = [Calculation(), Calculation(), Calculation()]calcs[0].value = 3calcs[1].value = 4calcs[2].value = 5for c in calcs: print c.square() 12391625 File : Open / Close, then Cast on that time It is same as C, Grab and Close a file. How every, It is able to cast (ex, integer) at the time of read. 123456789101112131415score_list = []# Read CSV file in same directoryscore_list_file = open(\"score.csv\")for score in score_list_file : score = score.rstrip() # Delete line break score = score.split(\",\") # Sprit by , # score_list.append(score) # [0] read as text, [1] cast for integer score_list.append([score[0], int(score[1])])score_list_file.close()print score_list 1[[&apos;Taro&apos;, 78], [&apos;HHanako&apos;, 89], [&apos;Ichiro&apos;, 68], [&apos;Keita&apos;, 54], [&apos;Yuko&apos;, 89], [&apos;Reiko&apos;, 78]]","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"https://we-yu.github.io/tags/Python/"},{"name":"Udemy","slug":"Udemy","permalink":"https://we-yu.github.io/tags/Udemy/"},{"name":"Python2.7","slug":"Python2-7","permalink":"https://we-yu.github.io/tags/Python2-7/"}]},{"title":"Review4RecentlyUdemyClasses","slug":"Review4RecentlyUdemyClasses","date":"2019-03-19T17:48:45.000Z","updated":"2019-03-27T17:58:15.221Z","comments":true,"path":"2019/03/20/Review4RecentlyUdemyClasses/","link":"","permalink":"https://we-yu.github.io/2019/03/20/Review4RecentlyUdemyClasses/","excerpt":"","text":"Review for recently Udemy classes Unity 3D迷路ゲーム開発入門 Create 3D-packman-like game. Using object is primitive one, or combined that. Materials, Shaders, Uses only for change color. Control enemy-unit moving by simple AI. Let them trace player-unit. Edit many of src files. Implemented by C#, Use Lambda many times. Use a lot of src files, and their class and functions connected as complicated. It may hard for first time programmer. You have to use Pass by Reference, Pass by value and Inheritance. You’d better understand this informations before start. There’s start &amp; goal in game, But no have “scene change”. Use UI as Buttons. This is Unity basic functions. Some programming knowledge, thinking is required. But if you have that already, good course for study. 【初心者でも簡単】はじめてのUnity 3D ゲームデザイン Require Macintosh for student. If you want to install application for publish and setting in Windows, You have to replace of information skill in your mind. Might be point isn’t Mac, Important is Command line. Maybe you can do same way on Linux. Maybe this is my fault, Use on Cygwin, That was failed. Main game is very simple. Attach some lights and downloaded materials for object. Then wondering in that world. Never coding. Basically uses StandardAssets and downloaded materials. Just build only “Stage for roaming”. This class is for beginner. On this time, Beginner means Never coding before. Create a simple 3D Unity Game from Scratch English only. No subtitles. But follow their title and action, You may understand what you have to do roughly. On 3D stage, Play with bounding ball and get scores. Save last score and high-score. Nothing game clear, But implement Page transition from start to goal and time of gameover. If Compare #1, Code is very simple. But need to use physical simulation. (Rigidbody, AddForce) Use text and button in Unity UI. Do build, And create execution file. Nothing special features. It make as title, “Create sipmle game from scratch”. If you try to do from simple game, I can recommend for you.","categories":[],"tags":[{"name":"Unity","slug":"Unity","permalink":"https://we-yu.github.io/tags/Unity/"},{"name":"Udemy","slug":"Udemy","permalink":"https://we-yu.github.io/tags/Udemy/"}]},{"title":"Post","slug":"Post","date":"2019-03-19T16:27:35.000Z","updated":"2019-03-19T16:27:35.724Z","comments":true,"path":"2019/03/19/Post/","link":"","permalink":"https://we-yu.github.io/2019/03/19/Post/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2019-03-19T16:17:26.845Z","updated":"2019-03-19T16:17:26.845Z","comments":true,"path":"2019/03/19/hello-world/","link":"","permalink":"https://we-yu.github.io/2019/03/19/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}